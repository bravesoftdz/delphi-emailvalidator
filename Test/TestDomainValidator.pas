unit TestDomainValidator;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit
  being tested.

}

interface

uses
  TestFramework, Generics.Collections, RegularExpressions, DomainValidator;

type
  // Test methods for class TDomainValidator

  TestTDomainValidator = class(TTestCase)
  strict private
    validator: TDomainValidator;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestValidDomains;
    procedure TestInvalidDomains;
  end;

implementation

procedure TestTDomainValidator.SetUp;
begin
  validator := TDomainValidator.Create;
end;

procedure TestTDomainValidator.TearDown;
begin
  validator.Free;
  validator := nil;
end;

procedure TestTDomainValidator.TestInvalidDomains;
begin
  CheckFalse(validator.isValid('.org'));
  CheckFalse(validator.isValid(' apache.org '));
  CheckFalse(validator.isValid('apa che.org'));
  CheckFalse(validator.isValid('-testdomain.name'));
  CheckFalse(validator.isValid('testdomain-.name'));
  CheckFalse(validator.isValid('---c.com'));
  CheckFalse(validator.isValid('c--.com'));
  CheckFalse(validator.isValid('apache.rog'));
  CheckFalse(validator.isValid('http://www.apache.org'));
  CheckFalse(validator.isValid(' '));
end;

procedure TestTDomainValidator.TestValidDomains;
begin
  CheckTrue(validator.isValid('apache.org'));
  CheckTrue(validator.isValid('www.google.com'));
  CheckTrue(validator.isValid('test-domain.com'));
  CheckTrue(validator.isValid('test---domain.com'));
  CheckTrue(validator.isValid('test-d-o-m-ain.com'));
  CheckTrue(validator.isValid('as.uk'));
  CheckTrue(validator.isValid('e.cl'));
  CheckTrue(validator.isValid('ApAchE.Org'));
  CheckTrue(validator.isValid('z.com'));
  CheckTrue(validator.isValid('i.have.an-example.domain.name'));
end;

initialization

// Register any test cases with the test runner
RegisterTest(TestTDomainValidator.Suite);

end.
